#!/usr/bin/env ruby

require 'pathname'
require 'io/console'

target_dir = ARGV.length > 0 ? ARGV[0] : "."
puts "* Target dir: #{target_dir}"

tfvars_path = Pathname(target_dir).join("terraform.tfvars").to_s

if File.exist?( tfvars_path )
  puts "[NOTICE] '#{tfvars_path}' file already exists."
  print "continue? (y/n):"

  $stdin.cooked do |io|
    ch = io.readbyte

    if( ch != 121 )
      puts "Abort."
      exit
    end

  end
end

out_vars = []

Dir.glob('**/*.env', File::FNM_DOTMATCH, base: target_dir).each do |file|
  file_path = File.join(target_dir, file)
  puts "* Processing: #{file_path}\n"
  if file == "terraform.env"
    puts "    It skipped: #{file_path}\n"
    next
  end

  File.open( file_path, mode = 'rt') do |f|
    f.each_line do |line|
      if line =~ /\=/
        # puts line
        key, value = line.split('=').map(&:strip)
        value = value.match(/[\'\"]?([^\'\"]+)[\'\"]?/)[0] # 引用符の処理
        out_vars.push( { key: key, value: value} )
      end
    end
  end
end

out_format = ""
out_vars.each do |define|
  out_format << "    #{define[:key]} = \"#{define[:value]}\"\n"
end

tfvars_file = File.open( tfvars_path, "w" )
  tfvars_file.puts "env_vars = {\n#{out_format}}"
tfvars_file.close

